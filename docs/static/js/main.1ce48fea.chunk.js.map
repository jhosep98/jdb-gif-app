{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","themeConfig.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","TextField","variant","label","type","value","onChange","target","color","fullWidth","useStyles","makeStyles","root","width","margin","background","media","height","CustomCard","styled","Card","GifGridItem","title","url","classes","className","elevation","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","component","CardActions","Button","size","endIcon","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","ContainerCard","Paper","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","theme","createMuiTheme","palette","primary","main","secondary","green","Title","h1","ListaContainer","ol","GifExpertApp","categories","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ce48fea.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        variant=\"filled\"\r\n        label=\"Search-Gifs\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        color=\"primary\"\r\n        fullWidth\r\n      ></TextField>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"325px\",\r\n    margin: \"1.2rem\",\r\n    background: \"#508781\",\r\n    color: \"#fff\",\r\n  },\r\n  media: {\r\n    height: 270,\r\n  },\r\n});\r\n\r\nconst CustomCard = styled(Card)`\r\n  @media (max-width: 600px) {\r\n    width: 220px !important;\r\n    margin: 0 0 30px 0 !important;\r\n  }\r\n`;\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <CustomCard className={classes.root} elevation={8}>\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={url} title={title} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            endIcon={<ShareIcon />}\r\n          >\r\n            Share\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            endIcon={<FavoriteIcon />}\r\n          >\r\n            Like\r\n          </Button>\r\n        </CardActions>\r\n      </CardActionArea>\r\n    </CustomCard>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=ylxzNrvpUUBzP2IXyvul9y2eo95tRjmI`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n  }));\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst ContainerCard = styled(Paper)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  background: transparent !important;\r\n  padding: 1.2rem 0;\r\n  @media (max-width: 600px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>cargando...</p>}\r\n      <ContainerCard elevation={3}>\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </ContainerCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#064B7F\",\r\n    },\r\n    secondary: {\r\n      main: green[400],\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport theme from \"./themeConfig\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`;\r\nconst ListaContainer = styled.ol`\r\n  padding: 0;\r\n  width: 100%;\r\n`;\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Title>JdbGifApp</Title>\r\n      <AddCategory setCategories={setCategories} />\r\n      <ListaContainer>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ListaContainer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GifExpertApp from \"./GifExpertApp\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}